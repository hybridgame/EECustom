ACTION_IF GAME_IS ~pst pstee~ THEN BEGIN

  ACTION_IF GAME_IS ~pst~ THEN BEGIN // pst, not pstee
  
    ACTION_IF stack > 255 BEGIN OUTER_SET stack = 255 END
  
  END

  // gems/jewelry/misc
  COPY_EXISTING ~addrtear.itm~ ~override~ // adder's tear
                ~agoody.itm~   ~override~ // a goody!
                ~bagocoin.itm~ ~override~ // bag of coins
                ~bandage.itm~  ~override~ // bandages
                ~bbchrm.itm~   ~override~ // black-barbed charm
                ~bbseed.itm~   ~override~ // black-barbed seed
                ~bloochrm.itm~ ~override~ // blood charm
                ~bloodfly.itm~ ~override~ // blood fly charm
                ~bonechrm.itm~ ~override~ // bone charm
                ~brobra.itm~   ~override~ // bronze bracelet
                ~broring.itm~  ~override~ // bronze ring
                ~c_1101.itm~   ~override~ // blessed candy
                ~c_1106.itm~   ~override~ // holy candy
                ~c_1301.itm~   ~override~ // mechanus candy
                ~c_2102.itm~   ~override~ // crunchity candy
                ~c_2114.itm~   ~override~ // frosty mint candy
                ~c_2211.itm~   ~override~ // quivering candy
                ~c_2212.itm~   ~override~ // minaurosian chocolate
                ~c_2214.itm~   ~override~ // lucky candy
                ~c_2501.itm~   ~override~ // stinky chocolate
                ~cerepara.itm~ ~override~ // kasseg, cerebral parasite
                ~cflychrm.itm~ ~override~ // corpse fly charm
                ~charchrm.itm~ ~override~ // charcoal charm
                ~chchar.itm~   ~override~ // charcoal charm
                ~clipcop.itm~  ~override~ // clipped copper coin
                ~clotchrm.itm~ ~override~ // clot charm
                ~copear.itm~   ~override~ // ancient copper earring
                ~costume.itm~  ~override~ // dustman costume
                ~costume1.itm~ ~override~ // dustman costume
                ~costume2.itm~ ~override~ // godsman costume
                ~cratchrm.itm~ ~override~ // cranium rat charm
                ~dratchrm.itm~ ~override~ // dirty rat charm
                ~dustrobe.itm~ ~override~ // dustman robes
                ~embchrm.itm~  ~override~ // dustman embalming charm, lesser
                ~embchrm2.itm~ ~override~ // dustmen embalming charm, greater
                ~golbra.itm~   ~override~ // gold bracelet
                ~golear.itm~   ~override~ // gold earring
                ~golring.itm~  ~override~ // gold ring
                ~hearchrm.itm~ ~override~ // heart charm
                ~junk.itm~     ~override~ // junk
                ~knotchrm.itm~ ~override~ // knot charm
                ~lore.itm~     ~override~ // charm of infinite recall
                ~magitm.itm~   ~override~ // a magic item!
                ~manacle.itm~  ~override~ // shackles of light
                ~needle.itm~   ~override~ // needle and thread
                ~ratcharm.itm~ ~override~ // rat charm
                ~rochchrm.itm~ ~override~ // cockroach charm
                ~silbra.itm~   ~override~ // silver bracelet
                ~silear.itm~   ~override~ // silver earring
                ~silring.itm~  ~override~ // silver ring
                ~tail.itm~     ~override~ // cranium rat tail
                ~tbchrm.itm~   ~override~ // thrice-blind charm
                ~tsilbra.itm~  ~override~ // tarnished silver bracelet
    READ_SHORT 0x38 current
    PATCH_IF (stack > current) BEGIN
      WRITE_SHORT  0x38 stack
    END
    BUT_ONLY

END ELSE BEGIN

  ACTION_CLEAR_ARRAY cd_stackables

  ACTION_IF GAME_IS ~iwd how totlm bg1 totsc~ THEN BEGIN // old engines need a header to be able to stack items
    OUTER_SET needs_header = 1
  END ELSE BEGIN
    OUTER_SET needs_header = 0
  END

  COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~ // looking for gems and jewelry
    READ_SHORT 0x1c type     ELSE 0
    READ_SHORT 0x70 fx_num   ELSE 1
    PATCH_IF (((type =  1) OR      // amulets
               (type = 10) OR      // rings
               (type = 33) OR      // gold
               (type = 34) OR      // gems
               (type = 59) OR      // furs or pelts
               ("%SOURCE_RES%" STRING_COMPARE_CASE "00misc23" = 0) OR // rhino beetle shell
               ("%SOURCE_RES%" STRING_COMPARE_CASE "00misc24" = 0) OR // umber hulk hide
               ("%SOURCE_RES%" STRING_COMPARE_CASE "00misc39" = 0) OR // boring beetle shell
               ("%SOURCE_RES%" STRING_COMPARE_CASE "cdrem" = 0) OR    // remorhaz shell
               ("%SOURCE_RES%" STRING_COMPARE_CASE "hidebee" = 0) OR  // rhino beetle shell
               ("%SOURCE_RES%" STRING_COMPARE_CASE "hideumb" = 0) OR  // umber hulk hide
               ("%SOURCE_RES%" STRING_COMPARE_CASE "_misc01" = 0) OR  // winter wolf pelts
               ("%SOURCE_RES%" STRING_COMPARE_CASE "_misc12" = 0) OR  // ankheg shell
               ("%SOURCE_RES%" STRING_COMPARE_CASE "_misc52" = 0) OR  // wyvern heads
               ("%SOURCE_RES%" STRING_COMPARE_CASE "_misc86" = 0) OR  // bandit scalps
               ("%SOURCE_RES%" STRING_COMPARE_CASE "_misc87" = 0) OR  // contaminated iron
               ("%SOURCE_RES%" STRING_COMPARE_CASE "_potn54" = 0) OR  // empty potion bottle
               ("%SOURCE_RES%" STRING_COMPARE_CASE "misc01" = 0) OR   // winter wolf pelts
               ("%SOURCE_RES%" STRING_COMPARE_CASE "misc12" = 0) OR   // ankheg shell
               ("%SOURCE_RES%" STRING_COMPARE_CASE "misc1j" = 0) OR   // beljuril
               ("%SOURCE_RES%" STRING_COMPARE_CASE "misc52" = 0) OR   // wyvern heads
               ("%SOURCE_RES%" STRING_COMPARE_CASE "misc6m" = 0) OR   // demon heart
               ("%SOURCE_RES%" STRING_COMPARE_CASE "misc7v" = 0) OR   // dog meat
               ("%SOURCE_RES%" STRING_COMPARE_CASE "misc86" = 0) OR   // bandit scalps
               ("%SOURCE_RES%" STRING_COMPARE_CASE "misc87" = 0) OR   // contaminated iron
               ("%SOURCE_RES%" STRING_COMPARE_CASE "miscbd" = 0) OR   // dog bones
               ("%SOURCE_RES%" STRING_COMPARE_CASE "potn54" = 0) OR   // empty potion bottle
               ("%SOURCE_RES%" STRING_COMPARE_CASE "yeti" = 0)) AND   // yeti pelts (iwd)
              (fx_num = 0)) BEGIN
      SET add = 0
      READ_SHORT 0x68 abil_num ELSE 0
      READ_LONG  0x64 abil_off ELSE 0
      FOR (index = 0 ; index < abil_num ; ++index) BEGIN
        READ_BYTE  (abil_off +        (0x38 * index)) abil_type
        READ_SHORT (abil_off + 0x1e + (0x38 * index)) abil_fx_num
        PATCH_IF ("%abil_fx_num%" > 0) BEGIN
          SET add = 1
          SET index = abil_num // kill loop
        END
      END
      PATCH_IF (add = 0) BEGIN // if no effects
        READ_SHORT 0x38 current
        PATCH_IF (stack > current) BEGIN
          WRITE_SHORT  0x38 stack
          PATCH_IF current < 2 BEGIN 
            DEFINE_ASSOCIATIVE_ARRAY cd_stackables BEGIN ~%SOURCE_RES%~ => 1 END
          END
        END
        PATCH_IF ((needs_header = 1) AND (abil_num = 0)) BEGIN // old engines need a header to be able to stack items
          WRITE_SHORT  0x68 1 // add one ability
          WRITE_LONG   0x6a (THIS + 0x38)
          INSERT_BYTES 0x72 0x38 // inserts new ability of type default (0)
        END
      END
    END
    BUT_ONLY_IF_IT_CHANGES
  
  INCLUDE ~EECustom/lib/increase_scripts.tpa~

END