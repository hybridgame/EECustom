ACTION_IF GAME_IS ~pst pstee~ THEN BEGIN

  ACTION_IF GAME_IS ~pst~ THEN BEGIN // pst but not pstee
  
    ACTION_IF stack > 255 BEGIN OUTER_SET stack = 255 END
  
  END

  // scrolls
  COPY_EXISTING ~aclue.itm~    ~override~ // a clue!
                ~breast1.itm~  ~override~ // rune of lesser warding
                ~breast2.itm~  ~override~ // rune of armor
                ~breast3.itm~  ~override~ // rune of greater warding
                ~breast4.itm~  ~override~ // rune of shielding
                ~dlegacy2.itm~ ~override~ // healing scroll
    READ_SHORT 0x38 current
    PATCH_IF (stack > current) BEGIN
      WRITE_SHORT  0x38 stack
    END
    BUT_ONLY

END

ACTION_CLEAR_ARRAY cd_stackables

ACTION_IF GAME_IS ~iwd how totlm bg1 totsc~ THEN BEGIN // old engines need a header to be able to stack items
  OUTER_SET needs_header = 1
END ELSE BEGIN
  OUTER_SET needs_header = 0
END

COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~ // looking for scrolls
  READ_SHORT  0x1C "type" ELSE 0
  PATCH_IF ("%type%" = 11) BEGIN // scrolls
    READ_SHORT 0x38 current
    PATCH_IF (stack > current) BEGIN
      WRITE_SHORT  0x38 stack
      PATCH_IF current < 2 BEGIN 
        DEFINE_ASSOCIATIVE_ARRAY cd_stackables BEGIN ~%SOURCE_RES%~ => 1 END
      END
    END
  END
  READ_SHORT 0x68 abil_num ELSE 1
  PATCH_IF ((needs_header = 1) AND (abil_num = 0)) BEGIN // old engines need a header to be able to stack items
    WRITE_SHORT  0x68 1 // one ability
    WRITE_LONG   0x6a (THIS + 0x38) // fx offset
    READ_LONG    0x64 abil_off
    INSERT_BYTES abil_off 0x38 // inserts new ability of type default (0)
  END
  BUT_ONLY
  
INCLUDE ~EECustom/lib/increase_scripts.tpa~
