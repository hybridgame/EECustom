ACTION_IF GAME_IS ~pst pstee~ THEN BEGIN

  ACTION_IF GAME_IS ~pst~ THEN BEGIN // pst but not pstee
  
    ACTION_IF stack > 255 BEGIN OUTER_SET stack = 255 END
  
  END

  // potions
  COPY_EXISTING ~acid.itm~   ~override~ // scent of the storm
                ~embalm.itm~ ~override~ // jar of embalming fluid
                ~murk.itm~   ~override~ // murk
                ~spice.itm~  ~override~ // whispering flask
                ~tears.itm~  ~override~ // tears of sorrow
    READ_SHORT 0x38 current
    PATCH_IF (stack > current) BEGIN
      WRITE_SHORT  0x38 stack
    END
    BUT_ONLY

END ELSE BEGIN

  ACTION_IF GAME_IS ~iwd how totlm bg1 totsc~ THEN BEGIN // old engines need a header to be able to stack items
    OUTER_SET needs_header = 1
  END ELSE BEGIN
    OUTER_SET needs_header = 0
    ACTION_IF GAME_IS ~iwd2~ THEN BEGIN // check additional item type for IWD2
      OUTER_SET check_food = 1
    END ELSE BEGIN
      OUTER_SET check_food = 0
    END
  END

  COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~ // looking for potions
    READ_SHORT  0x1c type ELSE 0
    READ_SHORT  0x38 max ELSE 0
    PATCH_IF ((max > 1) AND                              // if potion can already stack...
              (stack > max) AND                          // and we would actually increase the stack size...
              ((type = 9) OR                             // and it's actually a potion...
              ((type = 71) AND (check_food = 1)))) BEGIN // or iwd2 food
      WRITE_SHORT  0x38 stack
      READ_SHORT 0x68 abil_num ELSE 1
      PATCH_IF ((needs_header = 1) AND (abil_num = 0)) BEGIN // old engines need a header to be able to stack items
        WRITE_SHORT  0x68 1 // one ability
        WRITE_LONG   0x6a (THIS + 0x38) // fx offset
        READ_LONG    0x64 abil_off
        INSERT_BYTES abil_off 0x38 // inserts new ability of type default (0)
      END
    END
    BUT_ONLY

END